{
    "title": "Дополнительные практические темы в ООП",
    "description": "python\\ch10",
    "theme_id": 10,
    "questions": [
      {
        "question_text": "Что делает паттерн Singleton?",
        "answers": [
          {
            "answer_text": "Он позволяет создавать объекты различных типов через общий интерфейс.",
            "is_correct": false
          },
          {
            "answer_text": "Он гарантирует, что у класса есть только один экземпляр.",
            "is_correct": true
          },
          {
            "answer_text": "Он разделяет интерфейсы на более мелкие и специализированные.",
            "is_correct": false
          },
          {
            "answer_text": "Он инвертирует зависимости между классами.",
            "is_correct": false
          }
        ]
      },
      {
        "question_text": "Что такое сериализация в контексте объектно-ориентированного программирования?",
        "answers": [
          {
            "answer_text": "Процесс создания новых объектов.",
            "is_correct": false
          },
          {
            "answer_text": "Процесс преобразования объектов в формат, который можно сохранить или передать.",
            "is_correct": true
          },
          {
            "answer_text": "Процесс изменения структуры класса.",
            "is_correct": false
          },
          {
            "answer_text": "Процесс удаления объектов.",
            "is_correct": false
          }
        ]
      },
      {
        "question_text": "Как можно использовать статическую типизацию в Python?",
        "answers": [
          {
            "answer_text": "Используя ключевое слово static перед объявлением переменной.",
            "is_correct": false
          },
          {
            "answer_text": "Используя функцию type() для определения типа переменной во время выполнения.",
            "is_correct": false
          },
          {
            "answer_text": "Используя аннотации типов в объявлении функций и методов.",
            "is_correct": true
          },
          {
            "answer_text": "Используя классы для создания новых типов данных.",
            "is_correct": false
          }
        ]
      }
    ]
}