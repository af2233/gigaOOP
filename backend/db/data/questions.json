[
    {
        "question_text": "Что такое класс в объектно-ориентированном программировании?",
        "quiz_id": 1
    },
    {
        "question_text": "Как создать объект из класса в Python?",
        "quiz_id": 1
    },
    {
        "question_text": "Чем отличаются атрибуты класса от атрибутов объекта?",
        "quiz_id": 1
    },
    {
        "question_text": "Как в Python реализуется инкапсуляция с использованием различных типов атрибутов (public, protected, private)?",
        "quiz_id": 2
    },
    {
        "question_text": "Что такое методы класса в контексте объектно-ориентированного программирования?",
        "quiz_id": 2
    },
    {
        "question_text": "Чем отличаются методы экземпляра от статических методов в Python?",
        "quiz_id": 2
    },
    {
        "question_text": "Как создать подкласс в Python, наследующий атрибуты и методы от базового класса?",
        "quiz_id": 3
    },
    {
        "question_text": "Что делает ключевое слово super() в Python?",
        "quiz_id": 3
    },
    {
        "question_text": "Что такое множественное наследование в Python?",
        "quiz_id": 3
    },
    {
        "question_text": "Что такое абстрактный класс в Python?",
        "quiz_id": 4
    },
    {
        "question_text": "Какая основная цель абстрактных классов в Python?",
        "quiz_id": 4
    },
    {
        "question_text": "Что представляет собой интерфейс в объектно-ориентированном программировании?",
        "quiz_id": 4
    },
    {
        "question_text": "Какой магический метод используется для определения строкового представления объекта, предназначенного для пользователя?",
        "quiz_id": 5
    },
    {
        "question_text": "Какой магический метод Python используется для сравнения двух объектов класса по их содержимому?",
        "quiz_id": 5
    },
    {
        "question_text": "Какой из магических методов Python позволяет использовать функцию len() для объекта?",
        "quiz_id": 5
    },
    {
        "question_text": "Какая связь между объектами в композиции?",
        "quiz_id": 6
    },
    {
        "question_text": "Какой из следующих примеров демонстрирует композицию в объектно-ориентированном программировании?",
        "quiz_id": 6
    },
    {
        "question_text": " Какой из следующих примеров является демонстрацией агрегации в объектно-ориентированном программировании?",
        "quiz_id": 6
    },
    {
        "question_text": "Какой декоратор используется для определения метода, который не зависит от экземпляра или класса?",
        "quiz_id": 7
    },
    {
        "question_text": "Как можно использовать декоратор @property для контроля за изменением атрибутов класса?",
        "quiz_id": 7
    },
    {
        "question_text": "Что делает декоратор @property в Python?",
        "quiz_id": 7
    },
    {
        "question_text": "Какая область видимости у переменных, объявленных внутри функции?",
        "quiz_id": 8
    },
    {
        "question_text": "Где доступны переменные, объявленные на уровне модуля?",
        "quiz_id": 8
    },
    {
        "question_text": "Что такое встроенные функции и константы в Python?",
        "quiz_id": 8
    },
    {
        "question_text": "Как можно обработать исключение, возникшее внутри метода класса?",
        "quiz_id": 9
    },
    {
        "question_text": "Как создать собственное исключение в Python?",
        "quiz_id": 9
    },
    {
        "question_text": "Что делает блок finally в обработке исключений?",
        "quiz_id": 9
    },
    {
        "question_text": "Что делает паттерн Singleton?",
        "quiz_id": 10
    },
    {
        "question_text": "Что такое сериализация в контексте объектно-ориентированного программирования?",
        "quiz_id": 10
    },
    {
        "question_text": "Как можно использовать статическую типизацию в Python?",
        "quiz_id": 10
    }
]
